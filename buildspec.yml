version: 0.2

phases:
  pre_build:
    commands:
      # ECRにログイン
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com

      - cp .env.example .env
      - bash deploy/set_env_variables.sh

      - NGINX_ECR_REPO_URL=$AWS_ACCOUNT_ID.dkr.ecr.ap-northeast-1.amazonaws.com/devtnagano/laravel-web
      - PHP_ECR_REPO_URL=$AWS_ACCOUNT_ID.dkr.ecr.ap-northeast-1.amazonaws.com/devtnagano/laravel-app

  build:
    commands:
      - echo Building the Nginx Docker image...
      - docker build --no-cache --platform linux/amd64 -t devtnagano/laravel-web -f ./laravel/infra/web/Dockerfile .
      - docker tag devtnagano/laravel-web:latest ${NGINX_ECR_REPO_URL}:latest
      - CURRENT_NGINX_ECR_REPO_URL="${NGINX_ECR_REPO_URL}":latest
      - docker push $CURRENT_NGINX_ECR_REPO_URL

      - echo Building the PHP Docker image...
      - docker build --no-cache --platform linux/amd64 -t devtnagano/laravel-app -f ./laravel/infra/app/Dockerfile .
      - docker tag devtnagano/laravel-app:latest ${PHP_ECR_REPO_URL}:latest
      - CURRENT_PHP_ECR_REPO_URL="${PHP_ECR_REPO_URL}":latest
      - docker push $CURRENT_NGINX_ECR_REPO_URL

  post_build:
    commands:
      # コンテナイメージの情報をimagedefinitions.jsonファイルに書き込む
      - echo Writing image definitions file...
      # "%s"はプレイスホルダー
      - printf '[{"name":"laravel-web","imageUri":"%s"}]' $CURRENT_NGINX_ECR_REPO_URL > imagedefinitions.json
      - printf ',\n{"name":"laravel-app","imageUri":"%s"}' $CURRENT_PHP_ECR_REPO_URL >> imagedefinitions.json
      # - cd laravel
      # - composer install
      # - composer dump-autoload
      # - php artisan migrate --force
      # - bash deploy/seeder/specific_seeding.sh
      # - cd ..
artifacts:
  files:
    - imagedefinitions.json